rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // User profile
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      
      match /conversations/{conversationId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
    }

    // Chat messages (top-level)
    match /chatMessages/{messageId} {
      allow read: if request.auth != null && request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }

    // Mood entries
    match /moodEntries/{entryId} {
      allow read: if request.auth != null && request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }

    // Gratitude entries
    match /gratitudeEntries/{entryId} {
      allow read: if request.auth != null && request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }

    // Community messages
    match /communityMessages/{messageId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.senderId;
    }

    // Medicine orders
    match /medicineOrders/{orderId} {
      allow read: if request.auth != null && request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }

    // Medical queries
    match /medicalQueries/{queryId} {
      allow read: if request.auth != null && request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }

    // Medicines (public)
    match /medicines/{medicineId} {
      allow read: if true;
    }

    // Wellness Sessions - NEW
    match /wellnessSessions/{sessionId} {
      allow read: if request.auth != null && request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }

    // Video Completions - NEW
    match /videoCompletions/{completionId} {
      allow read: if request.auth != null && request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }

    // Activity Completions - NEW
    match /activityCompletions/{completionId} {
      allow read: if request.auth != null && request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }

    // Live Sessions - NEW
    match /liveSessions/{sessionId} {
      allow read: if true; // Anyone can view live sessions
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
      allow update: if request.auth != null && 
        (request.auth.uid == resource.data.userId || 
         request.auth.uid == request.resource.data.userId);
      allow delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }

    // Wellness Activities - NEW
    match /wellnessActivities/{activityId} {
      allow read: if true; // Anyone can view wellness activities
      allow create: if request.auth != null && request.auth.uid == request.resource.data.createdBy;
      allow update: if request.auth != null && 
        (request.auth.uid == resource.data.createdBy || 
         request.auth.uid == request.resource.data.createdBy);
      allow delete: if request.auth != null && request.auth.uid == resource.data.createdBy;
    }

    // Medicine Recommendations (public read, admin write) - NEW
    match /medicineRecommendations/{recommendationId} {
      allow read: if true;
      allow write: if false; // Only admin can write
    }

    // Hue Coins Collection (lowercase, matches code)
    match /huecoins/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    match /hueCoinsEarnings/{earningId} {
      allow read: if request.auth != null && request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }

    match /hueCoinsBadges/{badgeId} {
      allow read: if request.auth != null && request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }

    match /hueCoinsChallenges/{challengeId} {
      allow read: if request.auth != null && request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }

    match /hueCoinsStore/{itemId} {
      allow read: if true; // Anyone can view store items
      allow write: if false; // Only admin can write store items
    }

    match /userPurchases/{purchaseId} {
      allow read: if request.auth != null && request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }
  }
} 